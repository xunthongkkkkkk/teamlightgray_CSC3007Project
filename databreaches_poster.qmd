---
title: Visualising Top 10 Sectors affected by Data Breaches (2010--2024)
author: "Team Lightgray"
format: 
  poster-typst: 
    size: "33x23" # Approximately A1
    poster-authors: "Cham Xun Tong, Reagan Chia, Teo Shun Yao, Shermaine Peh, Pang Jing Jie, Enrique Carlos Marcelo, Garrick Low"
    studentids: "2102436, 2102539, 2101104, 2101573, 2100932, 2102740, 2100590"
    departments: "Information and Communication Technologies"
    institution-logo: "./images/sit-logo.png"
    footer-text: "Information Visualization 2024"
execute:
  echo: false
knitr:
  opts_chunk:
    dev: svglite
---

```{r}
#| label: setup
#| include: false

library(knitr)
```

# Introduction

Data breach is a common sight with the increase in technological surge, resulting in more companies bringing their physical work into the online space. One might think that these data breaches are irrelevant to them, but they will be surprised at how they might be the sole reason for such incident occurrences. Over the years, the number of data breaches have been increasing, from about 25 breaches in 2012 to currently in year 2024, 17 breaches have already occurred, and it is barely half the year passed!  

This visualization has been dubbed “World’s Biggest Data Breaches & Hacks”, but it can be improved due to its current clustering of companies and small wordings on less important data breaches that had happened. The purpose of this poster is to highlight the few most affected sectors, how the number of records stolen has increased over the years to raise awareness that every industry can be implicated by data breaches. 

# Previous Visualization

```{r}
#| label: previous-visualization
#| fig.cap: "World's Biggest Data Breaches & Hacks, published by Information is Beautiful"
#| out-width: "100%"

include_graphics("./images/previous_visualization.png")
```

# Strengths of Original Chart

-   **Clear Representation of Magnitude**: The bubble sizes in the chart effectively convey the scale of each data breach, making it easy to assess the impact without looking at numerical details.

-   **Categorical Differentiation**: Color coding allows for quick identification of different categories or years, making it simple to track temporal trends or categorize breaches by industry or type.

-   **Informative Labels**:  Each bubble is labeled with the affected entity’s name and the number of records compromised, providing immediate context without the need to cross-reference with external documents or data sources.

-   **Trend Identification**:  The vertical placement of the bubbles suggests a timeline, showing trends over the years and the evolution of data breaches in frequency and scale.

-   **Visual Impact**: The bubble chart format has a strong visual appeal that captures attention, encouraging further exploration and retaining viewer attention.

# Suggested Improvements

The original chart is cluttered and lacks a clear objective, making it difficult for viewers to quickly understand the data . Some suggested enhancements are:

-   **Simplification**: Focuses on the top 10 sectors affected by data breaches, reducing clutter and highlighting significant trends

-   **Categorization**: Groups data by sector for easier comparison and understanding of which industries are most vulnerable

-   **Change the plot to a Gantt Chart**: To visualize the timeline and impact of data breaches clearly. It allows audiences to clearly focus on what message the data in the charts are sending as well.

-   **Insights Focused**: To reduce cognitive load, the visualization should emphasize key insights, such as the top sectors affected by data breaches and the total records lost over time.

-   **Visual Consistency**: The use of consistent color coding for each insights aids in quick recognition and reduces cognitive load. Viewers can easily follow the color scheme to track data breaches across the timeline without getting confused by random color variations


# Implementation

## Data

The data was obtained from the "World's Biggest Data Breaches & Hacks" Google Spreadsheet. Key columns include organizations, records lost, year, sector, method, and interesting story. To maintain relevance and reduce complexity, sectors with similar characteristics were merged into broader categories such as Web, Financial, Retail, and others. The emphasis was then refined to the top 10 sectors based on total records lost between 2010 and 2024. Missing values in significant columns were addressed to guarantee data integrity.

## Software

The implementation utilized the Quarto publication framework, R programming language, and the following third-party packages:

-   **readcsv** for data import

-   **tidyverse** for data transformation, including **dplyr** for data cleaning, grouping, and summarization

-   **ggplot2** for powerful visualization customization options based on graphic grammar

-   **scales** for adjusting the axis scales

-   **ggrepel** for improved text labelling

-   **knitr** for dynamic document generation

# Improved Visualization

- **Insight 1**: The chart focuses on the top 10 sectors affected by data breaches between 2010 and 2024, highlighting the most vulnerable industries.

- **Insight 2**: The chart shows the an interesting trend of data breaches over time

- **Insight 3**: The chart uses color coding to differentiate between high vulnerability sectors and emerging threats, providing additional context to the data.

```{r}
#| label: improved-visualization
#| fig.cap: "Data Breaches Timeline by Sector"
#| out.width: "100%"
#| fig.align: "center"
#| fig-width: 10.0
#| fig-height: 10.0
#| echo: FALSE
#| warning: FALSE


# Load required libraries
library(ggplot2)
library(dplyr)
library(ggrepel)
library(scales)
library(tidyverse)
library(gridExtra)

# Read the data
data <- read.csv("IIB Data Breaches - LATEST - breaches.csv")

# Group sectors into broader categories
data <- data %>%
  mutate(
    sector_group = case_when(
      grepl("web", sector, ignore.case = TRUE) ~ "Web",
      grepl("healthcare|health", sector, ignore.case = TRUE) ~ "Healthcare",
      grepl("app", sector, ignore.case = TRUE) ~ "App",
      grepl("retail", sector, ignore.case = TRUE) ~ "Retail",
      grepl("gaming", sector, ignore.case = TRUE) ~ "Gaming",
      grepl("transport", sector, ignore.case = TRUE) ~ "Transport",
      grepl("financial|finance", sector, ignore.case = TRUE) ~ "Financial",
      grepl("tech", sector, ignore.case = TRUE) ~ "Tech",
      grepl("government", sector, ignore.case = TRUE) ~ "Government",
      grepl("telecoms", sector, ignore.case = TRUE) ~ "Telecoms",
      grepl("legal", sector, ignore.case = TRUE) ~ "Legal",
      grepl("media", sector, ignore.case = TRUE) ~ "Media",
      grepl("academic", sector, ignore.case = TRUE) ~ "Academic",
      grepl("energy", sector, ignore.case = TRUE) ~ "Energy",
      grepl("military", sector, ignore.case = TRUE) ~ "Military",
      TRUE ~ "Miscellaneous"
    ),
    records.lost = as.numeric(gsub("[^0-9]", "", records.lost)),
    year = as.numeric(year)
  ) %>%
  drop_na(records.lost, year, sector_group)

# Filter the data based on the specified year range and minimum records lost
start_year <- 2010
end_year <- 2024
data <- data %>%
  filter(year >= start_year & year <= end_year) %>%
  drop_na(records.lost, year, sector_group)

# Calculate total records lost for each sector group and select top 10 sectors
top_sectors <- data %>%
  group_by(sector_group) %>%
  summarize(total_records_lost = sum(records.lost)) %>%
  arrange(desc(total_records_lost)) %>%
  top_n(10, wt = total_records_lost) %>%
  pull(sector_group)

# Filter the data to include only top 10 sectors
data <- data %>%
  filter(sector_group %in% top_sectors)

# Convert the year to a date format for plotting
data <- data %>%
  mutate(StartDate = as.Date(paste(year, "-01-01", sep = "")),
         EndDate = as.Date(paste(year, "-12-31", sep = "")))

# Sort the sectors by total records lost
sector_levels <- data %>%
  group_by(sector_group) %>%
  summarize(total_records_lost = sum(records.lost)) %>%
  arrange(desc(total_records_lost)) %>%
  pull(sector_group)

data <- data %>%
  mutate(sector_group = factor(sector_group, levels = rev(sector_levels)))

# Define important sectors to highlight
highlight_sectors <- c("Web", "Financial", "App", "Transport")

# Add a new column to specify color based on sector importance
data <- data %>%
  mutate(
    highlight = ifelse(as.character(sector_group) %in% highlight_sectors, as.character(sector_group), "Other")
  )

# Convert sector_group to a factor and then to numeric for plotting
data$sector_group_num <- as.numeric(factor(data$sector_group))

# Calculate the total number of data breaches each year
yearly_data <- data %>%
  group_by(year) %>%
  summarize(total_records_lost = sum(records.lost))
yearly_data <- yearly_data %>%
  filter(year < 2024)
data <- data %>%
  filter(year < 2024)
# Define color palette
color_palette <- c("Web" = "red", "Financial" = "red", "App" = "orange2", "Transport" = "orange2", "Other" = "gray")
coeff <- max(yearly_data$total_records_lost) / length(unique(data$sector_group_num))  # Adjust this coefficient to normalize the secondary axis

# Custom labelling function
label_billion <- function(x) {
   paste0(scales::comma(x / 1e9), "B")
}

# Create the plot
gantt_plot <- ggplot(data, aes(x = StartDate, y = sector_group_num)) +
  geom_segment(aes(xend = EndDate, yend = sector_group_num, size = records.lost, color = highlight), show.legend = TRUE) +
  geom_point(aes(size = records.lost, color = highlight), show.legend = TRUE) +
  scale_size_continuous(range = c(2, 10), breaks = c(50000000, 100000000, 500000000, 1000000000), labels = c("50M", "100M", "500M", "1B")) +
  scale_color_manual(values = color_palette, 
                     breaks = c("Web", "App"),
                     labels = c("High Vulnerability", "Emerging Threats"),
                     name = "Insights",
                     ) +
  scale_x_date(date_labels = "%Y", 
               date_breaks = "1 years", 
               limits = as.Date(c("2010-01-01", "2023-12-31"))
               ) +
  scale_y_continuous(
    name = "Sector",
    breaks = 1:length(unique(data$sector_group_num)),
    labels = levels(data$sector_group),
    sec.axis = sec_axis(~ . * coeff, 
                        name = "Total Records Stolen", 
                        breaks = seq(0, 3e9, by = 0.5e9), 
                        labels = label_billion)
    ) +
  labs(
    title = "Data Breaches Timeline by Sector",
    x = "Year",
    size = "Records Breached"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title.x = element_text(size = 14, face = "bold"),
    axis.title.y = element_text(size = 14, vjust = 2, face = "bold"),
    axis.title.y.right = element_text(size = 14, vjust = 2, face = "bold", color = "black"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12),
    axis.text.y.right = element_text(size = 12, color = "black"),  # Improve readability
    panel.grid.major.x = element_line(color = "Gray90" , size = 0.5),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_blank(),
    legend.position = "top",
    legend.box.just = "center",
    legend.title = element_text(size = 12, face = "bold"),
    legend.text = element_text(size = 10),
    plot.margin = margin(10, 10, 10, 10)
  ) +
  guides(size = guide_legend(override.aes = list(color = "black"))) +  # Change legend color to black for better visibility
  geom_text_repel(aes(label = ifelse(records.lost >= 500000000, paste(records.lost /1000000, "M"), "")), 
 size = 3.5, color = "black", nudge_y = 0.3, segment.color = "grey50") +
  geom_smooth(data = yearly_data, aes(x = as.Date(paste(year, "-01-01", sep = "")), y = (total_records_lost / coeff) + 1), method = "loess", se = FALSE,  color = "turquoise2", size = 1, alpha = 0.3) 

# Print the plot
print(gantt_plot)

```

# Further Sugestions for interactivity

-   **Interactive Filtering**: Allow users to filter data breaches by sector, year, or records lost to focus on specific subsets of the data.

-   **Tooltip Information**: Display additional details about each data breach, such as the affected organization, records lost, and breach method, when hovering over the bubbles.

-   **Dynamic Sorting**: Enable users to sort the data breaches by sector, records lost, or year to explore different trends and patterns.


# Conclusion

The improved visualization effectively highlights the top 10 sectors affected by data breaches between 2010 and 2024, providing a clear and concise overview of the data. By categorizing the sectors and visualizing the timeline of data breaches, the chart offers valuable insights into the industries most vulnerable to cyber threats. The use of color coding, size differentiation, and text labels enhances the readability and interpretability of the chart, making it easier for viewers to grasp the key information at a glance. The proposed interactivity features would further enhance the user experience and enable more in-depth exploration of the data.

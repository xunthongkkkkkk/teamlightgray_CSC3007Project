{
  "hash": "6afb0d7ac17a1932df7e4000d2ce701d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TeamLightGray_CSC3007Project\"\nauthor: \"Team Lightgray\"\nformat: html\nknitr:\n  opts_chunk:\n    fig.width: 7.5\n    fig.height: 5\n    fig.align: center\n---\n\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\n\n## Running Code\n## Code Generated from chatgpt\n\n# Load libraries\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(patchwork)\nlibrary(ggrepel)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'scales'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:readr':\n\n    col_factor\n```\n\n\n:::\n:::\n\n\n# Load data\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load the data from the local file\ndata <- read_csv(\"IIB Data Breaches - LATEST - breaches.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 461 Columns: 16\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(14): organisation, alternative name, records lost, year, date, story, s... dbl\n(1): ID lgl (1): ...12\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...12`\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display the first few rows to check the structure\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 16\n  organisation `alternative name` `records lost` year  date  story sector method\n  <chr>        <chr>              <chr>          <chr> <chr> <chr> <chr>  <chr> \n1 \"visualisat… <NA>               (use 3m, 4m, … year… <NA>  <NA>  \"web\\… \"poor…\n2 \"AT&T\"       <NA>               73,000,000     2024  Apr … Sens… \"tele… \"hack…\n3 \"Irish towi… <NA>               512,000        2023  Oct … The … \"tran… \"poor…\n4 \"Maine Gove… <NA>               1,300,000      2023  May … Russ… \"gove… \"hack…\n5 \"Welltok\"    <NA>               8,500,000      2023  Nov … Pati… \"heal… \"hack…\n6 \"Maximus\"    <NA>               10,000,000     2023  Jul … Expl… \"gove… \"hack…\n# ℹ 8 more variables: `interesting story` <chr>, `data sensitivity` <chr>,\n#   `displayed records` <chr>, ...12 <lgl>, `source name` <chr>,\n#   `1st source link` <chr>, `2nd source link` <chr>, ID <dbl>\n```\n\n\n:::\n:::\n\n\n# Data preparation\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Convert `records lost` to numeric, handling non-numeric values\ndata <- data %>%\n  mutate(`records lost` = as.numeric(gsub(\"[^0-9]\", \"\", `records lost`)),\n         year = as.numeric(year))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `year = as.numeric(year)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\n# Add categories\ndata <- data %>%\n  mutate(\n    Category = case_when(\n      grepl(\"Facebook|Twitter|Microsoft|LinkedIn\", organisation) ~ \"Tech\",\n      grepl(\"Health\", organisation, ignore.case = TRUE) ~ \"Healthcare\",\n      grepl(\"Finance|Bank\", organisation, ignore.case = TRUE) ~ \"Financial\",\n      TRUE ~ \"Other\"\n    )\n  )\n\n# Display the first few rows to verify the new columns\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 17\n  organisation `alternative name` `records lost`  year date  story sector method\n  <chr>        <chr>                       <dbl> <dbl> <chr> <chr> <chr>  <chr> \n1 \"visualisat… <NA>                        34510    NA <NA>  <NA>  \"web\\… \"poor…\n2 \"AT&T\"       <NA>                     73000000  2024 Apr … Sens… \"tele… \"hack…\n3 \"Irish towi… <NA>                       512000  2023 Oct … The … \"tran… \"poor…\n4 \"Maine Gove… <NA>                      1300000  2023 May … Russ… \"gove… \"hack…\n5 \"Welltok\"    <NA>                      8500000  2023 Nov … Pati… \"heal… \"hack…\n6 \"Maximus\"    <NA>                     10000000  2023 Jul … Expl… \"gove… \"hack…\n# ℹ 9 more variables: `interesting story` <chr>, `data sensitivity` <chr>,\n#   `displayed records` <chr>, ...12 <lgl>, `source name` <chr>,\n#   `1st source link` <chr>, `2nd source link` <chr>, ID <dbl>, Category <chr>\n```\n\n\n:::\n:::\n\n\n# Filter and Aggregate Data\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define a threshold for major breaches (e.g., 100 million records)\nthreshold <- 100000000\n\n# Separate major and minor breaches\nmajor_breaches <- data %>% filter(`records lost` >= threshold)\nminor_breaches <- data %>% filter(`records lost` < threshold)\n\n# Aggregate minor breaches by category and year\nminor_breaches_aggregated <- minor_breaches %>%\n  group_by(Category, year) %>%\n  summarize(`records lost` = sum(`records lost`), .groups = 'drop') %>%\n  mutate(organisation = \"Other\")\n\n# Combine major breaches and aggregated minor breaches\ncombined_data <- bind_rows(major_breaches, minor_breaches_aggregated)\n\n# Display the combined data\nhead(combined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 17\n  organisation `alternative name` `records lost`  year date  story sector method\n  <chr>        <chr>                       <dbl> <dbl> <chr> <chr> <chr>  <chr> \n1 X (Twitter)  <NA>                    200000000  2023 Jan … \"Fro… web    poor …\n2 Indonesia's… BPJS Kesehatan          279000000  2022 May … \"The… gover… hacked\n3 Indonesian … <NA>                   1000000000  2022 Oct … \"A v… telec… hacked\n4 Twitter      <NA>                    200000000  2022 Dec … \"Ove… web    hacked\n5 Shanghai Po… <NA>                    500000000  2022 Jul … \"A d… finan… hacked\n6 Syniverse    <NA>                    500000000  2021 Sep … \"\\\"A… telec… hacked\n# ℹ 9 more variables: `interesting story` <chr>, `data sensitivity` <chr>,\n#   `displayed records` <chr>, ...12 <lgl>, `source name` <chr>,\n#   `1st source link` <chr>, `2nd source link` <chr>, ID <dbl>, Category <chr>\n```\n\n\n:::\n:::\n\n\n\n# Create improved visualization\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define a distinct color palette\ncolor_palette <- c(\"Tech\" = \"#1f78b4\", \"Healthcare\" = \"#33a02c\", \"Financial\" = \"#e31a1c\", \"Other\" = \"#6a3d9a\")\n\n# Improved Bubble Chart with Enhanced Aesthetics and Size Legend Formatting\nimproved_plot <- ggplot(combined_data, aes(x = year, y = `records lost`, size = `records lost`, fill = Category, label = organisation)) +\n  geom_jitter(shape = 21, color = \"black\", alpha = 0.6, width = 0.15, height = 0) +  # Adds points with specified shape, color, transparency, and jittering to reduce overlap\n  geom_text_repel(aes(label = ifelse(`records lost` >= threshold, organisation, \"\")), size = 3, show.legend = FALSE) +  # Adds text labels without overlapping\n  scale_size_area(max_size = 20, breaks = c(2.5e+08, 5e+08, 7.5e+08, 1e+09), labels = c(\"250M\", \"500M\", \"750M\", \"1B\")) +  # Customizes size legend\n  scale_x_continuous(breaks = seq(2004, 2024, 2), labels = as.character(seq(2004, 2024, 2)), limits = c(2004, 2024)) +  # Customizes x-axis with limits\n  scale_y_continuous(labels = scales::comma, limits = c(0, 1.1e+09)) +  # Customizes y-axis with limits\n  scale_fill_manual(values = color_palette) +  # Apply custom color palette\n  theme_minimal() +  # Applies a minimal theme\n  theme(\n    axis.title.x = element_text(size = 14, face = \"bold\"),  # Customizes x-axis title\n    axis.title.y = element_text(size = 14, face = \"bold\"),  # Customizes y-axis title\n    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotates x-axis text for readability\n    axis.text.y = element_text(size = 12),  # Customizes y-axis text\n    legend.position = \"right\",  # Positions legend on the right\n    legend.title = element_text(size = 12),  # Customizes legend title\n    legend.text = element_text(size = 10),  # Customizes legend text\n    plot.title = element_text(size = 16, face = \"bold\"),  # Customizes plot title\n    plot.subtitle = element_text(size = 12, face = \"italic\"),  # Customizes plot subtitle\n    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = \"grey80\"),  # Customizes major grid lines\n    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = \"grey90\")  # Customizes minor grid lines\n  ) +\n  labs(title = \"World's Biggest Data Breaches and Hacks\",\n       subtitle = \"From 2004 to 2024\",\n       x = \"Year\",\n       y = \"Number of Records Breached\",\n       size = \"Records Breached\",\n       fill = \"Category\",\n       caption = \"Source: Information Is Beautiful\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display the improved plot\nprint(improved_plot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_text_repel()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 22 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](TeamLightGray_CSC3007Project_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=720}\n:::\n:::\n",
    "supporting": [
      "TeamLightGray_CSC3007Project_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}